#:import MDDropdownMenu kivymd.uix.menu.MDDropdownMenu
#:import MDFlatButton kivymd.uix.button.MDFlatButton
#:import Animation kivy.animation.Animation

<NewButton>
	text_color: (1, 1, 1, 1)
	md_bg_color: (0, 0, 0, 1)
	size_hint_x: 1
	# _md_bg_color_down: (0, 0, 0, 1)
	# _radius: '10dp'


<Container>:
	name: 'container'

	canvas:
		Color:
			rgba: 0.7411764705882353, 0.7411764705882353, 0.7411764705882353, 1
		Rectangle:
			size: self.size
			pos: self.pos

	GridLayout:
		rows: 3

		GridLayout:
			cols: 3
			size_hint_y: 0.057
			padding: 2
			spacing: dp(1)

			NewButton:
				id: gotoSettings
				text: 'Дополнительно'
				on_release:
					root.manager.current = 'settings'
					root.manager.transition.direction = 'right'

			NewButton:
				id: fontSpinner
				on_text: root.fontChanged()
				on_press: Animation().stop_all(self)
				on_release: app.openMenu(self, root.fonts)

			NewButton:
				id: reloadBtn
				# on_press: Animation().stop_all(self)
				on_release: root.pressed(self)

		GridLayout:
			cols: 1
			rows: 1
			padding: [0, 5]

			ScrollView:
				id: scrollArea
				scroll_timeout: 250
				padding: [0, 1, 0, 0]

				MDLabel:
					id: rst
					text_size: root.width, None
					size_hint_y: None
					background_color : 0, 0, 0, 0
					text: ""
					height: self.texture_size[1]
					markup: True
					on_text: root.scheduleChanged()

		AnchorLayout:
			id: errorLayout
			anchor_x: 'center'
			anchor_y: 'bottom'
			size_hint_y: 0

			canvas:
				Color:
					rgba: 0.3, 0.3, 0.3, 1
				Rectangle:
					size: self.size
					pos: self.pos

			Label:
				id: errorLabel
				text: ""
				color: (1, 0.2, 0.2, 1)



<Settings>:
	name: 'settings'

	canvas:
		Color:
			rgba: 0.7411764705882353, 0.7411764705882353, 0.7411764705882353, 1
		Rectangle:
			size: self.size
			pos: self.pos

	# BoxLayout:
	# 	orientation: 'vertical'
	# 	padding: 2
	# 	spacing: "2dp"

	GridLayout:
		rows: 7
		cols: 1
		# size_hint_y: 0.073
		padding: 2
		spacing: "2dp"

		NewButton:
			id: gotoContainer
			# size_hint_y: 0.073
			text: 'Назад'

			on_release:
				root.gotoPressed()
				root.manager.current = 'container'
				root.manager.transition.direction = 'left'

		NewButton:
			id: instSpinner
			# size_hint_y: 0.073
			on_text: root.instChanged()
			on_press: Animation().stop_all(self)
			on_release: app.openMenu(self, root.insts)

		NewButton:
			id: courseSpinner
			# size_hint_y: 0.073
			on_text: root.courseChanged()
			on_press: Animation().stop_all(self)
			on_release: app.openMenu(self, root.courses)

		NewButton:
			id: groupSpinner
			# size_hint_y: 0.073
			on_text: root.groupChanged()
			on_press: Animation().stop_all(self)
			on_release: app.openMenu(self, root.groups)

		GridLayout:
			rows: 1
			cols: 1
			padding: [0, 2]
			size_hint_y: 0

			MDLabel:
				id: _label
				markup: True
				text: root.line
				# height: 1

		BoxLayout:
			orientation: 'vertical'
			size_hint_y: 0

			GridLayout:
				rows: 2
				cols: 1
				spacing: "2dp"
				padding: [0, 5]

				NewButton:
					id: nextWeekButton
					# size_hint_y: 0.073
					text: "Следующая неделя"
					on_press: Animation().stop_all(self)
					on_release:
						root.gotoPressed(next_week=7)
						root.manager.current = 'container'
						root.manager.transition.direction = 'left'

				NewButton:
					id: currentWeek
					# size_hint_y: 0.073
					text: "Текущая неделя"
					on_press: Animation().stop_all(self)
					disabled: True
					on_release:
						root.gotoPressed(current_week = True)
						root.manager.current = 'container'
						root.manager.transition.direction = 'left'

	GridLayout:
		padding: [0, 100]